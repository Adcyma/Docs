"use strict";(self.webpackChunkadcymadocs=self.webpackChunkadcymadocs||[]).push([[276],{1256:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var t=n(4848),i=n(8453);const r={},a="System Users",o={id:"administration/Settings/systemusers",title:"System Users",description:"The System Users page provides comprehensive management of internal Adcyma user accounts. These are administrative accounts that grant access to the Adcyma platform itself, separate from the managed users in your tenant. This interface allows administrators to control who can access Adcyma and what level of permissions they have within the system.",source:"@site/v1/administration/Settings/systemusers.md",sourceDirName:"administration/Settings",slug:"/administration/Settings/systemusers",permalink:"/v1/administration/Settings/systemusers",draft:!1,unlisted:!1,editUrl:"https://github.com/adcyma/docs/tree/main/v1/administration/Settings/systemusers.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Preferences",permalink:"/v1/administration/Settings/preferences"},next:{title:"Authentication",permalink:"/v1/authentication"}},c={},l=[{value:"User Management Capabilities",id:"user-management-capabilities",level:2},{value:"System Roles and Permissions",id:"system-roles-and-permissions",level:2},{value:"User Role",id:"user-role",level:3},{value:"API Role",id:"api-role",level:3},{value:"Admin Role",id:"admin-role",level:3},{value:"Access Management Best Practices",id:"access-management-best-practices",level:2}];function d(e){const s={admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"system-users",children:"System Users"})}),"\n",(0,t.jsx)(s.p,{children:"The System Users page provides comprehensive management of internal Adcyma user accounts. These are administrative accounts that grant access to the Adcyma platform itself, separate from the managed users in your tenant. This interface allows administrators to control who can access Adcyma and what level of permissions they have within the system."}),"\n",(0,t.jsx)(s.admonition,{title:"Important Distinction",type:"info",children:(0,t.jsxs)(s.p,{children:["System users are internal Adcyma accounts and ",(0,t.jsx)(s.strong,{children:"are not automatically provisioned to your tenant"}),". These accounts provide access to the Adcyma platform only and are separate from your organization's managed user population."]})}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("img",{src:"/img/SystemUsers.webp",style:{maxWidth:"1400px",height:"auto",border:"2px solid black",borderRadius:"5px"}}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(s.h2,{id:"user-management-capabilities",children:"User Management Capabilities"}),"\n",(0,t.jsx)(s.p,{children:"Administrators have full control over system user lifecycle management:"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Create System Users"}),(0,t.jsx)(s.br,{}),"\n","Add new internal users by entering their account details and selecting an appropriate role that defines their access level within Adcyma."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Edit System Users"}),(0,t.jsx)(s.br,{}),"\n","Update existing user information, modify assigned roles, or adjust account settings as organizational needs change."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Delete System Users"}),(0,t.jsx)(s.br,{}),"\n","Permanently remove user accounts when team members no longer require access to the Adcyma platform."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Role Assignment"}),(0,t.jsx)(s.br,{}),"\n","Configure specific permission levels for each user through role-based access control, ensuring users have appropriate access to system functions."]}),"\n",(0,t.jsx)(s.h2,{id:"system-roles-and-permissions",children:"System Roles and Permissions"}),"\n",(0,t.jsx)(s.p,{children:"Adcyma provides three distinct role levels, each designed for different operational needs:"}),"\n",(0,t.jsx)(s.h3,{id:"user-role",children:"User Role"}),"\n",(0,t.jsx)(s.p,{children:"Provides essential dashboard access with permissions to:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"New Employee Operations"})," - Create and onboard new employees"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Edit Employee Information"})," - Modify existing employee details and attributes"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Employee Departure Processing"})," - Handle offboarding and account deactivation workflows"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"View Queued Tasks"})," - Monitor pending operations and system processes"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"View History"})," - Access audit trails and historical activity records"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"api-role",children:"API Role"}),"\n",(0,t.jsx)(s.p,{children:"Includes all User role privileges with additional capabilities:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Full Dashboard Access"})," - All standard user operations and viewing permissions"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"API Key Management"})," - Generate and manage API keys for system integrations"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Programmatic Access"})," - Utilize Adcyma's API for automated operations and custom integrations"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"admin-role",children:"Admin Role"}),"\n",(0,t.jsx)(s.p,{children:"The highest privilege level providing comprehensive system control:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Complete System Access"})," - Full permissions across all Adcyma functions and features"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"User and Role Management"})," - Create, modify, and delete system users and their role assignments"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"System Configuration"})," - Modify platform settings, preferences, and administrative configurations"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Advanced Operations"})," - Access to all system management and troubleshooting capabilities"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"access-management-best-practices",children:"Access Management Best Practices"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Role Assignment Strategy"}),(0,t.jsx)(s.br,{}),"\n","Assign the minimum role necessary for each user's responsibilities to maintain security while ensuring operational effectiveness."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Regular Access Reviews"}),(0,t.jsx)(s.br,{}),"\n","Periodically review system user accounts and role assignments to ensure they align with current organizational needs and security policies."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Account Lifecycle Management"}),(0,t.jsx)(s.br,{}),"\n","Promptly create accounts for new team members and remove access for departing personnel to maintain system security."]})]})}function m(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var t=n(6540);const i={},r=t.createContext(i);function a(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);